presentLows <- present |>
left_join(pastLows) |>
mutate(record = ifelse(low_f <= record_low_f, "Y", "N")) |>
filter(record == "Y")
pastHighs <- past |>
rename(Pasthigh = record_high_f)
presentHighs <- present |>
left_join(pastHighs) |>
mutate(record = ifelse(high_f >= record_high_f, "Y", "N")) |>
filter(record == "Y")
dgr_fmt <- function(x, ...) {
parse(text = paste(x, "*degree", sep = ""))
}
a <- dgr_fmt(seq(-20, 100, by = 10))
legend_data <- data.frame(x = seq(175, 182), y = rnorm(8, 15, 2))
p <- ggplot(past, aes(newDay, high_f)) +
theme(plot.background = element_blank(),
panel.grid.minor = element_blank(),
panel.grid.major = element_blank(),
panel.border = element_blank(),
panel.background = element_blank(),
axis.ticks = element_blank(),
axis.title = element_blank()) +
geom_linerange(past, mapping = aes(x = newDay, ymin = record_low_f, ymax = record_high_f), color = "darkslateblue", alpha = 0.1)
p <- p +
geom_linerange(past, mapping = aes(x = newDay, ymin = average_low_f, ymax = average_high_f), color = "darkslateblue", alpha = 0.7)
p <- p +
geom_line(present, mapping = aes(x = newDay, y = high_f, group = 1, color = "darkblue", show.legend = FALSE)) +
geom_vline(xintercept = 0, color = "darkblue", linetype = 1, size = 1) +
theme(legend.position = "none")
p <- p +
geom_line(present, mapping = aes(x = newDay, y = low_f, group = 1, color = "firebrick3", show.legend = FALSE)) +
geom_vline(xintercept = 0, color = "firebrick3", linetype = 1, size = 1) +
theme(legend.position  ="none")
p <- p +
geom_hline(yintercept = -20, color = "white", linetype = 1) +
geom_hline(yintercept = -10, color = "white", linetype = 1) +
geom_hline(yintercept = 0, color = "white", linetype = 1) +
geom_hline(yintercept = 10, color = "white", linetype = 1) +
geom_hline(yintercept = 20, color = "white", linetype = 1) +
geom_hline(yintercept = 30, color = "white", linetype = 1) +
geom_hline(yintercept = 40, color = "white", linetype = 1) +
geom_hline(yintercept = 50, color = "white", linetype = 1) +
geom_hline(yintercept = 60, color = "white", linetype = 1) +
geom_hline(yintercept = 70, color = "white", linetype = 1) +
geom_hline(yintercept = 80, color = "white", linetype = 1) +
geom_hline(yintercept = 90, color = "white", linetype = 1) +
geom_hline(yintercept = 100, color = "white", linetype = 1)
p <- p +
geom_vline(xintercept = 31, color = "wheat4", linetype = 3, size = 0.5) +
geom_vline(xintercept = 59, color = "wheat4", linetype = 3, size = 0.5) +
geom_vline(xintercept = 90, color = "wheat4", linetype = 3, size = 0.5) +
geom_vline(xintercept = 120, color = "wheat4", linetype = 3, size = 0.5) +
geom_vline(xintercept = 151, color = "wheat4", linetype = 3, size = 0.5) +
geom_vline(xintercept = 181, color = "wheat4", linetype = 3, size = 0.5) +
geom_vline(xintercept = 212, color = "wheat4", linetype = 3, size = 0.5) +
geom_vline(xintercept = 243, color = "wheat4", linetype = 3, size = 0.5) +
geom_vline(xintercept = 273, color = "wheat4", linetype = 3, size = 0.5) +
geom_vline(xintercept = 304, color = "wheat4", linetype = 3, size = 0.5) +
geom_vline(xintercept = 334, color = "wheat4", linetype = 3, size = 0.5) +
geom_vline(xintercept = 365, color = "wheat4", linetype = 3, size = 0.5)
p <- p +
coord_cartesian(ylim = c(-20, 100)) +
scale_y_continuous(breaks = seq(-20, 100, by = 10), labels = a) +
scale_x_continuous(expand = c(0, 0),
breaks = c(15, 45, 75, 105, 135, 165, 195, 228, 258, 288, 320, 350),
labels = c("January", "February", "March", "April",
"May", "June", "July", "August", "September",
"October", "November", "December"))
print(p)
p <- p +
geom_point(data = presentLows, aes(x = newDay, y = low_f), color = "blue3") +
geom_point(data = presentHighs, aes(x = newDay, y = high_f), color = "firebrick3")
print(p)
library(tidyverse)
library(dplyr)
library(tidyr)
library(ggplot2)
library(ggthemes)
#importing data
library(readxl)
philly <- read_xlsx("data/weather.xlsx", sheet = "Philadelphia")
view(philly)
#cleaning file
library(janitor)
philly <- philly %>%
clean_names(case = "snake")
view(philly)
#creating past dataframe
past <- philly |>
mutate(newDay = seq(1, length(day))) |>
ungroup()
past <- past |>
mutate(temp = (high_f + low_f) / 2)
#creating present dataframe
present <- philly |>
mutate(newDay = seq(1, length(day))) |>
mutate(temp = (average_high_f + average_low_f) / 2)
#creating past low temps dataframe
pastLows <- past |>
rename(Pastlow = record_low_f)
#creating present low temps dataframe
presentLows <- present |>
left_join(pastLows) |>
mutate(record = ifelse(low_f <= record_low_f, "Y", "N")) |>
filter(record == "Y")
#creating past high temps dataframe
pastHighs <- past |>
rename(Pasthigh = record_high_f)
#creating present high temps dataframe
presentHighs <- present |>
left_join(pastHighs) |>
mutate(record = ifelse(high_f >= record_high_f, "Y", "N")) |>
filter(record == "Y")
#base format for ggplot
dgr_fmt <- function(x, ...) {
parse(text = paste(x, "*degree", sep = ""))
}
a <- dgr_fmt(seq(-20, 100, by = 10))
legend_data <- data.frame(x = seq(175, 182), y = rnorm(8, 15, 2))
#creating background and main curve
p <- ggplot(past, aes(newDay, high_f)) +
theme(plot.background = element_blank(),
panel.grid.minor = element_blank(),
panel.grid.major = element_blank(),
panel.border = element_blank(),
panel.background = element_blank(),
axis.ticks = element_blank(),
axis.title = element_blank()) +
geom_linerange(past, mapping = aes(x = newDay, ymin = record_low_f, ymax = record_high_f), color = "darkslateblue", alpha = 0.2)
#creating second, inner curve
p <- p +
geom_linerange(past, mapping = aes(x = newDay, ymin = average_low_f, ymax = average_high_f), color = "darkslateblue", alpha = 0.5)
#creating high temp line
p <- p +
geom_line(present, mapping = aes(x = newDay, y = high_f, group = 1, color = "darkblue", show.legend = FALSE)) +
geom_vline(xintercept = 0, color = "darkblue", linetype = 1, size = 1) +
theme(legend.position = "none")
#creating low temp line
p <- p +
geom_line(present, mapping = aes(x = newDay, y = low_f, group = 1, color = "firebrick3", show.legend = FALSE)) +
geom_vline(xintercept = 0, color = "firebrick3", linetype = 1, size = 1) +
theme(legend.position  ="none")
#creating horizontal white lines to identify the temps better
p <- p +
geom_hline(yintercept = -20, color = "white", linetype = 1) +
geom_hline(yintercept = -10, color = "white", linetype = 1) +
geom_hline(yintercept = 0, color = "white", linetype = 1) +
geom_hline(yintercept = 10, color = "white", linetype = 1) +
geom_hline(yintercept = 20, color = "white", linetype = 1) +
geom_hline(yintercept = 30, color = "white", linetype = 1) +
geom_hline(yintercept = 40, color = "white", linetype = 1) +
geom_hline(yintercept = 50, color = "white", linetype = 1) +
geom_hline(yintercept = 60, color = "white", linetype = 1) +
geom_hline(yintercept = 70, color = "white", linetype = 1) +
geom_hline(yintercept = 80, color = "white", linetype = 1) +
geom_hline(yintercept = 90, color = "white", linetype = 1) +
geom_hline(yintercept = 100, color = "white", linetype = 1)
#creating vertical separations for the months
p <- p +
geom_vline(xintercept = 31, color = "wheat4", linetype = 3, size = 0.5) +
geom_vline(xintercept = 59, color = "wheat4", linetype = 3, size = 0.5) +
geom_vline(xintercept = 90, color = "wheat4", linetype = 3, size = 0.5) +
geom_vline(xintercept = 120, color = "wheat4", linetype = 3, size = 0.5) +
geom_vline(xintercept = 151, color = "wheat4", linetype = 3, size = 0.5) +
geom_vline(xintercept = 181, color = "wheat4", linetype = 3, size = 0.5) +
geom_vline(xintercept = 212, color = "wheat4", linetype = 3, size = 0.5) +
geom_vline(xintercept = 243, color = "wheat4", linetype = 3, size = 0.5) +
geom_vline(xintercept = 273, color = "wheat4", linetype = 3, size = 0.5) +
geom_vline(xintercept = 304, color = "wheat4", linetype = 3, size = 0.5) +
geom_vline(xintercept = 334, color = "wheat4", linetype = 3, size = 0.5) +
geom_vline(xintercept = 365, color = "wheat4", linetype = 3, size = 0.5)
#labeling x-axis with the months
p <- p +
coord_cartesian(ylim = c(-20, 100)) +
scale_y_continuous(breaks = seq(-20, 100, by = 10), labels = a) +
scale_x_continuous(expand = c(0, 0),
breaks = c(15, 45, 75, 105, 135, 165, 195, 228, 258, 288, 320, 350),
labels = c("January", "February", "March", "April",
"May", "June", "July", "August", "September",
"October", "November", "December"))
#finding the records of high and low temps
p <- p +
geom_point(data = presentLows, aes(x = newDay, y = low_f), color = "blue3") +
geom_point(data = presentHighs, aes(x = newDay, y = high_f), color = "firebrick3")
#creating title
p <- p +
ggtitle("Philadelphia Weather in 2022") +
theme(plot.title = element_text(face = "bold", hjust = 0.012, vjust = 0.8, color = "#3C3C3C", size = 20)) +
annotate("text", x = 19, y =104, label = "Temperature", size = 4, fontface = "bold")
#finding average high and low temps
high_avg_temp <- mean(philly$high_f)
low_avg_temp <- mean(philly$low_f)
print(high_avg_temp)
#creating caption/subtext
p <- p +
annotate("text", x = 39, y = 99,
label = "Data represents average low and high", size = 3, color = "gray30") +
annotate("text", x = 34, y = 95,
label = "daily temperatures for 2022. The", size = 3, color = "gray30") +
annotate("text", x = 39, y = 91,
label = "average high temperature was 49.58°.", size = 3, color = "gray30") +
annotate("text", x = 30, y = 87,
label = "The average low temperature", size = 3, color = "gray30") +
annotate("text", x = 13, y = 83,
label = "was 30.67°.", size = 3, color = "gray30")
print(p)
#creating legend helper? (I don't know what it is called)
p <- p +
annotate("segment", x = 181, xend = 181, y = 5, yend = 25, color = "darkslateblue", alpha = 0.2, size = 3) +
annotate("segment", x = 181, xend = 181, y = 12, yend = 18, color = "darkslateblue", alpha = 0.5, size = 3) +
geom_line(data = legend_data, aes(x = x, y = y)) +
annotate("segment", x = 183, xend = 185, y = 17.7, yend = 17.7, color = "darkslateblue", alpha = 0.5, size = 0.5) +
annotate("segment", x = 183, xend = 185, y = 12.2, yend = 12.2, color = "darkslateblue", alpha = 0.5, size = 0.5) +
annotate("segment", x = 185, xend = 185, y = 12.2, yend = 17.7, color = "darkslateblue", alpha = 0.5, size = 0.5) +
annotate("text", x = 198, y = 14.75, label = "NORMAL RANGE", size = 2, color = "gray30") +
annotate("text", x = 160, y = 14.75, label = "2022 TEMPERATURE", size = 2, color = "gray30") +
annotate("text", x = 195, y = 25, label = "RECORD HIGH", size = 2, color = "gray30") +
annotate("text", x = 195, y = 5, label = "RECORD LOW", size = 2, color = "gray30")
print(p)
library(tidyverse)
library(dplyr)
library(tidyr)
library(ggplot2)
library(ggthemes)
#importing data
library(readxl)
crater <- read_xlsx("data/weather.xlsx", sheet = "Crater Lake")
view(crater)
#cleaning file
library(janitor)
crater <- crater %>%
clean_names(case = "snake")
view(crater)
#creating past dataframe
past <- crater |>
mutate(newDay = seq(1, length(day))) |>
ungroup()
past <- past |>
mutate(temp = (high_f + low_f) / 2)
#creating present dataframe
present <- crater |>
mutate(newDay = seq(1, length(day))) |>
mutate(temp = (average_high_f + average_low_f) / 2)
#creating past low temps dataframe
pastLows <- past |>
rename(Pastlow = record_low_f)
#creating present low temps dataframe
presentLows <- present |>
left_join(pastLows) |>
mutate(record = ifelse(low_f <= record_low_f, "Y", "N")) |>
filter(record == "Y")
#creating past high temps dataframe
pastHighs <- past |>
rename(Pasthigh = record_high_f)
#creating present high temps dataframe
presentHighs <- present |>
left_join(pastHighs) |>
mutate(record = ifelse(high_f >= record_high_f, "Y", "N")) |>
filter(record == "Y")
#base format for ggplot
dgr_fmt <- function(x, ...) {
parse(text = paste(x, "*degree", sep = ""))
}
a <- dgr_fmt(seq(-20, 100, by = 10))
legend_data <- data.frame(x = seq(175, 182), y = rnorm(8, 15, 2))
#creating background and main curve
p <- ggplot(past, aes(newDay, high_f)) +
theme(plot.background = element_blank(),
panel.grid.minor = element_blank(),
panel.grid.major = element_blank(),
panel.border = element_blank(),
panel.background = element_blank(),
axis.ticks = element_blank(),
axis.title = element_blank()) +
geom_linerange(past, mapping = aes(x = newDay, ymin = record_low_f, ymax = record_high_f), color = "darkslateblue", alpha = 0.2)
#creating second, inner curve
p <- p +
geom_linerange(past, mapping = aes(x = newDay, ymin = average_low_f, ymax = average_high_f), color = "darkslateblue", alpha = 0.5)
#creating high temp line
p <- p +
geom_line(present, mapping = aes(x = newDay, y = high_f, group = 1, color = "darkblue", show.legend = FALSE)) +
geom_vline(xintercept = 0, color = "darkblue", linetype = 1, size = 1) +
theme(legend.position = "none")
#creating low temp line
p <- p +
geom_line(present, mapping = aes(x = newDay, y = low_f, group = 1, color = "firebrick3", show.legend = FALSE)) +
geom_vline(xintercept = 0, color = "firebrick3", linetype = 1, size = 1) +
theme(legend.position  ="none")
#creating horizontal white lines to identify the temps better
p <- p +
geom_hline(yintercept = -20, color = "white", linetype = 1) +
geom_hline(yintercept = -10, color = "white", linetype = 1) +
geom_hline(yintercept = 0, color = "white", linetype = 1) +
geom_hline(yintercept = 10, color = "white", linetype = 1) +
geom_hline(yintercept = 20, color = "white", linetype = 1) +
geom_hline(yintercept = 30, color = "white", linetype = 1) +
geom_hline(yintercept = 40, color = "white", linetype = 1) +
geom_hline(yintercept = 50, color = "white", linetype = 1) +
geom_hline(yintercept = 60, color = "white", linetype = 1) +
geom_hline(yintercept = 70, color = "white", linetype = 1) +
geom_hline(yintercept = 80, color = "white", linetype = 1) +
geom_hline(yintercept = 90, color = "white", linetype = 1) +
geom_hline(yintercept = 100, color = "white", linetype = 1)
#creating vertical separations for the months
p <- p +
geom_vline(xintercept = 31, color = "wheat4", linetype = 3, size = 0.5) +
geom_vline(xintercept = 59, color = "wheat4", linetype = 3, size = 0.5) +
geom_vline(xintercept = 90, color = "wheat4", linetype = 3, size = 0.5) +
geom_vline(xintercept = 120, color = "wheat4", linetype = 3, size = 0.5) +
geom_vline(xintercept = 151, color = "wheat4", linetype = 3, size = 0.5) +
geom_vline(xintercept = 181, color = "wheat4", linetype = 3, size = 0.5) +
geom_vline(xintercept = 212, color = "wheat4", linetype = 3, size = 0.5) +
geom_vline(xintercept = 243, color = "wheat4", linetype = 3, size = 0.5) +
geom_vline(xintercept = 273, color = "wheat4", linetype = 3, size = 0.5) +
geom_vline(xintercept = 304, color = "wheat4", linetype = 3, size = 0.5) +
geom_vline(xintercept = 334, color = "wheat4", linetype = 3, size = 0.5) +
geom_vline(xintercept = 365, color = "wheat4", linetype = 3, size = 0.5)
#labeling x-axis with the months
p <- p +
coord_cartesian(ylim = c(-20, 100)) +
scale_y_continuous(breaks = seq(-20, 100, by = 10), labels = a) +
scale_x_continuous(expand = c(0, 0),
breaks = c(15, 45, 75, 105, 135, 165, 195, 228, 258, 288, 320, 350),
labels = c("January", "February", "March", "April",
"May", "June", "July", "August", "September",
"October", "November", "December"))
#finding the records of high and low temps
p <- p +
geom_point(data = presentLows, aes(x = newDay, y = low_f), color = "blue3") +
geom_point(data = presentHighs, aes(x = newDay, y = high_f), color = "firebrick3")
#creating title
p <- p +
ggtitle("Philadelphia Weather in 2022") +
theme(plot.title = element_text(face = "bold", hjust = 0.012, vjust = 0.8, color = "#3C3C3C", size = 20)) +
annotate("text", x = 19, y =104, label = "Temperature", size = 4, fontface = "bold")
#finding average high and low temps
high_avg_temp <- mean(crater$high_f)
low_avg_temp <- mean(crater$low_f)
print(high_avg_temp)
#creating caption/subtext
p <- p +
annotate("text", x = 39, y = 99,
label = "Data represents average low and high", size = 3, color = "gray30") +
annotate("text", x = 34, y = 95,
label = "daily temperatures for 2022. The", size = 3, color = "gray30") +
annotate("text", x = 39, y = 91,
label = "average high temperature was 49.58°.", size = 3, color = "gray30") +
annotate("text", x = 30, y = 87,
label = "The average low temperature", size = 3, color = "gray30") +
annotate("text", x = 13, y = 83,
label = "was 30.67°.", size = 3, color = "gray30")
print(p)
#creating legend helper? (I don't know what it is called)
p <- p +
annotate("segment", x = 181, xend = 181, y = 5, yend = 25, color = "darkslateblue", alpha = 0.2, size = 3) +
annotate("segment", x = 181, xend = 181, y = 12, yend = 18, color = "darkslateblue", alpha = 0.5, size = 3) +
geom_line(data = legend_data, aes(x = x, y = y)) +
annotate("segment", x = 183, xend = 185, y = 17.7, yend = 17.7, color = "darkslateblue", alpha = 0.5, size = 0.5) +
annotate("segment", x = 183, xend = 185, y = 12.2, yend = 12.2, color = "darkslateblue", alpha = 0.5, size = 0.5) +
annotate("segment", x = 185, xend = 185, y = 12.2, yend = 17.7, color = "darkslateblue", alpha = 0.5, size = 0.5) +
annotate("text", x = 198, y = 14.75, label = "NORMAL RANGE", size = 2, color = "gray30") +
annotate("text", x = 160, y = 14.75, label = "2022 TEMPERATURE", size = 2, color = "gray30") +
annotate("text", x = 195, y = 25, label = "RECORD HIGH", size = 2, color = "gray30") +
annotate("text", x = 195, y = 5, label = "RECORD LOW", size = 2, color = "gray30")
print(p)
library(tidyverse)
library(dplyr)
library(tidyr)
library(ggplot2)
library(ggthemes)
#importing data
library(readxl)
crater <- read_xlsx("data/weather.xlsx", sheet = "Crater Lake")
view(crater)
#cleaning file
library(janitor)
crater <- crater %>%
clean_names(case = "snake")
view(crater)
#creating past dataframe
past <- crater |>
mutate(newDay = seq(1, length(day))) |>
ungroup()
past <- past |>
mutate(temp = (high_f + low_f) / 2)
#creating present dataframe
present <- crater |>
mutate(newDay = seq(1, length(day))) |>
mutate(temp = (average_high_f + average_low_f) / 2)
#creating past low temps dataframe
pastLows <- past |>
rename(Pastlow = record_low_f)
#creating present low temps dataframe
presentLows <- present |>
left_join(pastLows) |>
mutate(record = ifelse(low_f <= record_low_f, "Y", "N")) |>
filter(record == "Y")
#creating past high temps dataframe
pastHighs <- past |>
rename(Pasthigh = record_high_f)
#creating present high temps dataframe
presentHighs <- present |>
left_join(pastHighs) |>
mutate(record = ifelse(high_f >= record_high_f, "Y", "N")) |>
filter(record == "Y")
#base format for ggplot
dgr_fmt <- function(x, ...) {
parse(text = paste(x, "*degree", sep = ""))
}
a <- dgr_fmt(seq(-20, 100, by = 10))
legend_data <- data.frame(x = seq(175, 182), y = rnorm(8, 15, 2))
#creating background and main curve
p <- ggplot(past, aes(newDay, high_f)) +
theme(plot.background = element_blank(),
panel.grid.minor = element_blank(),
panel.grid.major = element_blank(),
panel.border = element_blank(),
panel.background = element_blank(),
axis.ticks = element_blank(),
axis.title = element_blank()) +
geom_linerange(past, mapping = aes(x = newDay, ymin = record_low_f, ymax = record_high_f), color = "darkslateblue", alpha = 0.2)
#creating second, inner curve
p <- p +
geom_linerange(past, mapping = aes(x = newDay, ymin = average_low_f, ymax = average_high_f), color = "darkslateblue", alpha = 0.5)
#creating high temp line
p <- p +
geom_line(present, mapping = aes(x = newDay, y = high_f, group = 1, color = "darkblue", show.legend = FALSE)) +
geom_vline(xintercept = 0, color = "darkblue", linetype = 1, size = 1) +
theme(legend.position = "none")
#creating low temp line
p <- p +
geom_line(present, mapping = aes(x = newDay, y = low_f, group = 1, color = "firebrick3", show.legend = FALSE)) +
geom_vline(xintercept = 0, color = "firebrick3", linetype = 1, size = 1) +
theme(legend.position  ="none")
#creating horizontal white lines to identify the temps better
p <- p +
geom_hline(yintercept = -20, color = "white", linetype = 1) +
geom_hline(yintercept = -10, color = "white", linetype = 1) +
geom_hline(yintercept = 0, color = "white", linetype = 1) +
geom_hline(yintercept = 10, color = "white", linetype = 1) +
geom_hline(yintercept = 20, color = "white", linetype = 1) +
geom_hline(yintercept = 30, color = "white", linetype = 1) +
geom_hline(yintercept = 40, color = "white", linetype = 1) +
geom_hline(yintercept = 50, color = "white", linetype = 1) +
geom_hline(yintercept = 60, color = "white", linetype = 1) +
geom_hline(yintercept = 70, color = "white", linetype = 1) +
geom_hline(yintercept = 80, color = "white", linetype = 1) +
geom_hline(yintercept = 90, color = "white", linetype = 1) +
geom_hline(yintercept = 100, color = "white", linetype = 1)
#creating vertical separations for the months
p <- p +
geom_vline(xintercept = 31, color = "wheat4", linetype = 3, size = 0.5) +
geom_vline(xintercept = 59, color = "wheat4", linetype = 3, size = 0.5) +
geom_vline(xintercept = 90, color = "wheat4", linetype = 3, size = 0.5) +
geom_vline(xintercept = 120, color = "wheat4", linetype = 3, size = 0.5) +
geom_vline(xintercept = 151, color = "wheat4", linetype = 3, size = 0.5) +
geom_vline(xintercept = 181, color = "wheat4", linetype = 3, size = 0.5) +
geom_vline(xintercept = 212, color = "wheat4", linetype = 3, size = 0.5) +
geom_vline(xintercept = 243, color = "wheat4", linetype = 3, size = 0.5) +
geom_vline(xintercept = 273, color = "wheat4", linetype = 3, size = 0.5) +
geom_vline(xintercept = 304, color = "wheat4", linetype = 3, size = 0.5) +
geom_vline(xintercept = 334, color = "wheat4", linetype = 3, size = 0.5) +
geom_vline(xintercept = 365, color = "wheat4", linetype = 3, size = 0.5)
#labeling x-axis with the months
p <- p +
coord_cartesian(ylim = c(-20, 100)) +
scale_y_continuous(breaks = seq(-20, 100, by = 10), labels = a) +
scale_x_continuous(expand = c(0, 0),
breaks = c(15, 45, 75, 105, 135, 165, 195, 228, 258, 288, 320, 350),
labels = c("January", "February", "March", "April",
"May", "June", "July", "August", "September",
"October", "November", "December"))
#finding the records of high and low temps
p <- p +
geom_point(data = presentLows, aes(x = newDay, y = low_f), color = "blue3") +
geom_point(data = presentHighs, aes(x = newDay, y = high_f), color = "firebrick3")
#creating title
p <- p +
ggtitle("Philadelphia Weather in 2022") +
theme(plot.title = element_text(face = "bold", hjust = 0.012, vjust = 0.8, color = "#3C3C3C", size = 20)) +
annotate("text", x = 19, y =104, label = "Temperature", size = 4, fontface = "bold")
#finding average high and low temps
high_avg_temp <- mean(crater$high_f)
low_avg_temp <- mean(crater$low_f)
print(high_avg_temp)
#creating caption/subtext
p <- p +
annotate("text", x = 39, y = 99,
label = "Data represents average low and high", size = 3, color = "gray30") +
annotate("text", x = 34, y = 95,
label = "daily temperatures for 2022. The", size = 3, color = "gray30") +
annotate("text", x = 39, y = 91,
label = "average high temperature was 49.58°.", size = 3, color = "gray30") +
annotate("text", x = 30, y = 87,
label = "The average low temperature", size = 3, color = "gray30") +
annotate("text", x = 13, y = 83,
label = "was 30.67°.", size = 3, color = "gray30")
print(p)
#creating legend helper? (I don't know what it is called)
p <- p +
annotate("segment", x = 181, xend = 181, y = 0, yend = 20, color = "darkslateblue", alpha = 0.2, size = 3) +
annotate("segment", x = 181, xend = 181, y = 7, yend = 13, color = "darkslateblue", alpha = 0.5, size = 3) +
geom_line(data = legend_data, aes(x = x, y = y)) +
annotate("segment", x = 183, xend = 185, y = 12.7, yend = 12.7, color = "darkslateblue", alpha = 0.5, size = 0.5) +
annotate("segment", x = 183, xend = 185, y = 7.2, yend = 7.2, color = "darkslateblue", alpha = 0.5, size = 0.5) +
annotate("segment", x = 185, xend = 185, y = 7.2, yend = 15.7, color = "darkslateblue", alpha = 0.5, size = 0.5) +
annotate("text", x = 198, y = 9.75, label = "NORMAL RANGE", size = 2, color = "gray30") +
annotate("text", x = 160, y = 9.75, label = "2022 TEMPERATURE", size = 2, color = "gray30") +
annotate("text", x = 195, y = 20, label = "RECORD HIGH", size = 2, color = "gray30") +
annotate("text", x = 195, y = 0, label = "RECORD LOW", size = 2, color = "gray30")
print(p)
